---
name: "web-run-test-plan-action"
description: "Runs a Test Plan to execute automated E2E tests on Autify for Web"
author: "Autify"

branding:
  icon: "check-circle"
  color: "purple"

inputs:
  autify_for_web_api_token:
    description: "Personal Access Token"
    required: true

  test_plan_id:
    description: "Test Plan ID that you want to run"
    required: true

  test_plan_api_base_url:
    description: "Test Plan API base URL"
    default: https://app.autify.com/api/v1/schedules/
    required: false

outputs:
  response:
    value: ${{ steps.run-test-plan-action.outputs.response }}

runs:
  using: "composite"
  steps:
    - name: "Run a Test Plan on Autify for Web"
      shell: bash
      id: run-test-plan-action
      run: |
        error () {
          echo "::error ::${1}"
        }

        # Mask the value if it is passed in a way other than GitHub secrets
        echo "::add-mask::${{ inputs.autify_for_web_api_token }}"

        # Validate parameters
        if [ -z "${{ inputs.autify_for_web_api_token }}" ]; then
          error "Token should exist"
          exit 1
        fi

        if ! echo "${{ inputs.test_plan_id }}" | grep -Eq '^[0-9]+$'; then
          error "Test Plan ID should be string of digits"
          exit 1
        fi

        # Call API
        response=$(curl -s -X POST \
          -H "Authorization: Bearer ${{ inputs.autify_for_web_api_token }}" \
          -H "Content-Type: application/json" \
          "${{ inputs.test_plan_api_base_url }}${{ inputs.test_plan_id }}")

        # Validate response
        if [[ "$( echo ${response} | jq -R 'fromjson? | has("data")' )" == false ]]; then
          error "Something went wrong. The response was : ${response}"
          exit 1
        fi

        if [ "$( echo ${response} | jq -R 'fromjson? | has("errors")' )" == true ]; then
          error "Error running the test plan. The error messages are : ${response}"
          exit 1
        fi

        # Outputs
        echo "Successfully started the Test Plan."
        echo ${response} | jq -R 'fromjson?'
        echo "::set-output name=response::\"$(echo ${response})\""